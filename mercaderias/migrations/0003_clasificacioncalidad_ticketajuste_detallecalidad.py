# Generated by Django 4.2.11 on 2025-09-24 12:47

from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('almacenamiento', '0001_initial'),
        ('mercaderias', '0002_auto_20250924_0835'),
    ]

    operations = [
        migrations.CreateModel(
            name='ClasificacionCalidad',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('codigo', models.CharField(help_text='Código único del registro', max_length=50, unique=True)),
                ('fecha_registro', models.DateField(help_text='Fecha del registro de clasificación')),
                ('tipo_clasificacion', models.CharField(choices=[('TAMANO', 'Por Tamaño (mm)'), ('GRAMAJE', 'Por Gramaje'), ('CALIDAD', 'Por Calidad'), ('DESCARTE', 'Descarte/Aprovechable'), ('MIXTA', 'Clasificación Mixta')], default='TAMANO', max_length=20)),
                ('estado', models.CharField(choices=[('BORRADOR', 'Borrador'), ('REGISTRADO', 'Registrado'), ('VERIFICADO', 'Verificado'), ('CANCELADO', 'Cancelado')], default='BORRADOR', max_length=20)),
                ('cantidad_stock_original', models.DecimalField(decimal_places=2, help_text='Cantidad original del stock al momento de clasificar', max_digits=12)),
                ('cantidad_total_registrada', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Suma de todas las cantidades clasificadas', max_digits=12)),
                ('registrado_por', models.CharField(help_text='Empleado que registró la clasificación', max_length=100)),
                ('responsable', models.CharField(blank=True, help_text='Responsable de la clasificación física', max_length=100, null=True)),
                ('observaciones', models.TextField(blank=True, null=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('stock_origen', models.ForeignKey(help_text='Stock que se está clasificando', on_delete=django.db.models.deletion.CASCADE, related_name='clasificaciones', to='almacenamiento.stock')),
            ],
            options={
                'verbose_name': 'Clasificación de Calidad',
                'verbose_name_plural': 'Clasificaciones de Calidad',
                'ordering': ['-fecha_registro', '-fecha_creacion'],
            },
        ),
        migrations.CreateModel(
            name='TicketAjuste',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('numero_ticket', models.CharField(max_length=50, unique=True)),
                ('tipo_ajuste', models.CharField(choices=[('BAJA', 'Baja por Corrección'), ('ALTA', 'Alta por Corrección')], max_length=10)),
                ('fecha_ajuste', models.DateField()),
                ('cantidad_ajuste_kg', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('motivo', models.TextField()),
                ('autorizado_por', models.CharField(max_length=100)),
                ('registrado_por', models.CharField(max_length=100)),
                ('aplicado', models.BooleanField(default=False)),
                ('fecha_aplicacion', models.DateTimeField(blank=True, null=True)),
                ('observaciones', models.TextField(blank=True, null=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('clasificacion_origen', models.ForeignKey(blank=True, help_text='Clasificación que originó este ajuste', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ajustes_generados', to='mercaderias.clasificacioncalidad')),
                ('stock_afectado', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ajustes', to='almacenamiento.stock')),
            ],
            options={
                'verbose_name': 'Ticket de Ajuste',
                'verbose_name_plural': 'Tickets de Ajuste',
                'ordering': ['-fecha_ajuste', '-fecha_creacion'],
            },
        ),
        migrations.CreateModel(
            name='DetalleCalidad',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('cantidad_kg', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('porcentaje', models.DecimalField(decimal_places=2, help_text='% respecto al total clasificado', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0')), django.core.validators.MaxValueValidator(Decimal('100'))])),
                ('observaciones', models.TextField(blank=True, null=True)),
                ('almacenaje_especifico', models.ForeignKey(blank=True, help_text='Almacenaje específico donde se ubica esta calidad', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='calidades_almacenadas', to='almacenamiento.almacenaje')),
                ('calidad', models.ForeignKey(help_text='Tipo de calidad encontrada', on_delete=django.db.models.deletion.PROTECT, to='mercaderias.calidad')),
                ('clasificacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='detalles', to='mercaderias.clasificacioncalidad')),
                ('ubicacion_especifica', models.ForeignKey(help_text='Ubicación específica donde se ubica esta calidad', on_delete=django.db.models.deletion.PROTECT, related_name='calidades_ubicadas', to='almacenamiento.ubicacion')),
            ],
            options={
                'verbose_name': 'Detalle de Calidad',
                'verbose_name_plural': 'Detalles de Calidad',
                'ordering': ['-porcentaje', 'calidad__orden_presentacion'],
            },
        ),
    ]
